name: Create release

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Create release
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: node
          token: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      release-created: ${{ steps.release.outputs.release_created }}
      tag-name: ${{ steps.release.outputs.tag_name }}

  build-alacrity:
    needs: create-release

    if: ${{ needs.create-release.outputs.release-created }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Echo tag name
        run: echo "Build Alacrity ${{ needs.create-release.outputs.tag-name }} for platform ${{ matrix.platform }}."

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies(Ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "yarn"

      - name: Install frontend dependencies
        run: yarn install

      - name: Build Alacrity
        id: build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts(Linux)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          gh release upload ${{ needs.create-release.outputs.tag-name }} ${{ github.workspace }}/src-tauri/target/release/bundle/deb/*.deb
          gh release upload ${{ needs.create-release.outputs.tag-name }} ${{ github.workspace }}/src-tauri/target/release/bundle/appimage/*.AppImage

      - name: Upload artifacts(macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          cd ${{ github.workspace }}/src-tauri/target/release/bundle/macos
          zip -r Alacrity.app.zip Alacrity.app
          gh release upload ${{ needs.create-release.outputs.tag-name }} ${{ github.workspace }}/src-tauri/target/release/bundle/dmg/*.dmg
          gh release upload ${{ needs.create-release.outputs.tag-name }} ${{ github.workspace }}/src-tauri/target/release/bundle/macos/*.app.zip

      - name: Upload artifacts(Windows)
        if: matrix.platform == 'windows-latest'
        run: |
          echo ${{ steps.build.outputs.artifactPaths }}
          $env:MSI_FILE_PATH="${{ github.workspace }}/src-tauri/target/release/bundle/msi/*.msi"
          $env:NSIS_FILE_PATH="${{ github.workspace }}/src-tauri/target/release/bundle/msi/*.msi"
          echo $env:MSI_FILE_path
          echo $env:NSIS_FILE_path

#          gh release upload ${{ needs.create-release.outputs.tag-name }} $MSI_FILE_PATH
#          gh release upload ${{ needs.create-release.outputs.tag-name }} ./src-tauri/target/release/bundle/nsis/*.exe
